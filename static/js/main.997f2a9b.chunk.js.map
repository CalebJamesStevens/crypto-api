{"version":3,"sources":["Components/Coin.js","Components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","props","useState","coinImage","setCoinImage","coinName","setCoinName","coinCurrentPrice","setCoinCurrentPrice","coinPriceChange24hr","setCoinPriceChange24hr","coinPriceChangePercentage","setCoinPriceChangePercentage","coinLastUpdate","setCoinLastUpdate","useEffect","update","coin","image","name","current_price","price_change_24h","price_change_percentage_24h","last_updated","console","log","setInterval","className","src","Body","coins","setCoins","getData","Axios","get","then","response","data","forEach","index","catch","error","myCoinsList","arr","undefined","a","filter","includes","id","map","c","changeCoinList","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA8CeA,MA5Cf,SAAcC,GAAQ,IAAD,EACiBC,mBAAS,IAD1B,mBACVC,EADU,KACCC,EADD,OAEeF,mBAAS,IAFxB,mBAEVG,EAFU,KAEAC,EAFA,OAG+BJ,mBAAS,IAHxC,mBAGVK,EAHU,KAGQC,EAHR,OAIqCN,mBAAS,IAJ9C,mBAIVO,EAJU,KAIWC,EAJX,OAKiDR,mBAAS,IAL1D,mBAKVS,EALU,KAKiBC,EALjB,OAM2BV,mBAAS,IANpC,mBAMVW,EANU,KAMMC,EANN,OAOeZ,oBAAS,GAPxB,mBAgCjB,OAhCiB,UAQjBa,qBAAW,WACP,IAAMC,EAAS,WACXZ,EAAaH,EAAMgB,KAAKC,OACxBZ,EAAYL,EAAMgB,KAAKE,MACvBX,EAAoBP,EAAMgB,KAAKG,eAC/BV,EAAuBT,EAAMgB,KAAKI,kBAClCT,EAA6BX,EAAMgB,KAAKK,6BACxCR,EAAkBb,EAAMgB,KAAKM,cAC7BC,QAAQC,IAAI,QAEhBT,IACAU,aAAY,WAAOV,MAAW,OAC/B,IAaC,sBAAKW,UAAU,sBAAf,UACI,qBAAKA,UAAU,qBAAf,SAAoC,qBAAKA,UAAU,aAAaC,IAAKzB,MACrE,qBAAKwB,UAAU,YAAf,SAA4BtB,IAC5B,qBAAKsB,UAAU,qBAAf,SAAqCpB,IACrC,qBAAKoB,UAAU,yBAAf,SAAyClB,IACzC,qBAAKkB,UAAU,+BAAf,SAA+ChB,IAC/C,qBAAKgB,UAAU,oBAAf,SAAoCd,QCsBjCgB,MA3Df,WAAiB,IAAD,EAEc3B,mBAAS,IAFvB,mBAEL4B,EAFK,KAEEC,EAFF,OAG0B7B,mBAAS,IAHnC,6BAKZa,qBAAU,WACN,IAAMiB,EAAU,WACZC,IAAMC,IAAI,4HACTC,MAAK,SAACC,GACHL,EAASK,EAASC,MAClBP,EAAMQ,SAAQ,SAASrB,EAAMsB,GACzBf,QAAQC,IAAIR,SAGnBuB,OAAM,SAAAC,GAAK,OAAIjB,QAAQC,IAAIgB,OAGhCT,IACAN,aAAY,WAAOM,MAAY,OAChC,IASH,IAOIU,EAPmB,WAAe,IAAdC,EAAa,uDAAP,GAC1B,QAAaC,GAATd,EAAJ,CACAN,QAAQC,IAAIkB,GACZ,IAAIE,EAAKf,GAASA,EAAMgB,QAAO,SAAA7B,GAAI,OAAI0B,EAAII,SAAS9B,EAAK+B,OACzD,OAAOH,EAAEI,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAiBjC,KAAMiC,GAAZA,EAAEF,QAGjBG,CAAe,CAAC,UAAW,WAAY,SAAU,WAAY,aAE/E,OACI,gCACI,uDAEA,sBAAKxB,UAAU,kBAAf,UACI,sBAAKA,UAAU,uCAAf,UACI,qBAAKA,UAAU,uBACf,qBAAKA,UAAU,YAAf,kBACA,qBAAKA,UAAU,qBAAf,mBACA,qBAAKA,UAAU,yBAAf,yBACA,qBAAKA,UAAU,+BAAf,0BACA,qBAAKA,UAAU,oBAAf,wBAGHe,SC3CFU,MARf,WACE,OACE,qBAAKzB,UAAU,OAAf,SACE,cAAC,EAAD,OCKS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.997f2a9b.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Coin(props) {\n    const [coinImage, setCoinImage] = useState('');\n    const [coinName, setCoinName] = useState('');\n    const [coinCurrentPrice, setCoinCurrentPrice] = useState('');\n    const [coinPriceChange24hr, setCoinPriceChange24hr] = useState('');\n    const [coinPriceChangePercentage, setCoinPriceChangePercentage] = useState('');\n    const [coinLastUpdate, setCoinLastUpdate] = useState('');\n    const [hovering, setHovering] = useState(false);\n    useEffect (() => {\n        const update = () => {\n            setCoinImage(props.coin.image);\n            setCoinName(props.coin.name);\n            setCoinCurrentPrice(props.coin.current_price);\n            setCoinPriceChange24hr(props.coin.price_change_24h);\n            setCoinPriceChangePercentage(props.coin.price_change_percentage_24h);\n            setCoinLastUpdate(props.coin.last_updated);\n            console.log(\"Hey\")\n        }\n        update();\n        setInterval(() => {update()}, 60*1000)\n    }, []);\n\n    function hover (e) {\n        setHovering(!hovering)\n        if (hovering) {\n            e.target.style.background = '#333333';\n\n        } else {\n            e.target.style.background = '#666666';\n        }\n    }\n\n    return (\n        <div className='coin-data-container'>                \n            <div className='coin-img-container'><img className='coin-image' src={coinImage}/></div>\n            <div className='coin-name'>{coinName}</div>\n            <div className='coin-current-price'>{coinCurrentPrice}</div>\n            <div className='coin-price-change-24hr'>{coinPriceChange24hr}</div>\n            <div className='coin-price-change-percentage'>{coinPriceChangePercentage}</div>                   \n            <div className='coin-last-updated'>{coinLastUpdate}</div>\n        </div>\n    )\n}\n\nexport default Coin;","import Axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Coin from './Coin'\n\nfunction Body() {\n\n    const [coins, setCoins] = useState([]);\n    const [loadedCoins, setLoadedCoins] = useState([]);\n\n    useEffect(() => {\n        const getData = () => {\n            Axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=USD&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n            .then((response) => {\n                setCoins(response.data);\n                coins.forEach(function(coin, index) {\n                    console.log(coin)\n                });\n            })\n            .catch(error => console.log(error));\n        }\n\n        getData()\n        setInterval(() => {getData()}, 60*1000)\n    }, []);\n\n    //useEffect(() => {\n    //    setLoadedCoins(coins.map(c => <Coin key={c.id} coin={c}></Coin>));\n    //}, [coins])\n\n    \n    \n    //const myCoinsList = coins && coins.map(coin => <Coin key={coins[0]?.id} coin={coin} />)\n    const changeCoinList = (arr = []) => {\n        if (coins == undefined) return;\n        console.log(arr)\n        let a = (coins && coins.filter(coin => arr.includes(coin.id)))\n        return a.map(c => <Coin key={c.id} coin={c} />)\n    }\n    \n    let myCoinsList = changeCoinList(['bitcoin', 'ethereum', 'ripple', 'dogecoin', 'litecoin']);\n\n    return (\n        <div>\n            <h1>Minute Crypto Tracker</h1>\n\n            <div className='coins-container'>\n                <div className='coin-data-container coin-data-header'>\n                    <div className='coin-img-container'></div>\n                    <div className='coin-name'>Name</div>\n                    <div className='coin-current-price'>Price</div>\n                    <div className='coin-price-change-24hr'>24hr Change</div>\n                    <div className='coin-price-change-percentage'>24hr% change</div>\n                    <div className='coin-last-updated'>Updated</div>\n                </div>\n\n                {myCoinsList}\n                \n            </div>\n        </div>\n    );\n}\n\n\nexport default Body;\n/*<Coin key={coins[0]?.id} coin={coins[0]}></Coin>\n<Coin key={coins[1]?.id} coin={coins[1]}></Coin>\n<Coin key={coins[7]?.id} coin={coins[7]}></Coin>\n<Coin key={coins[9]?.id} coin={coins[9]}></Coin>\n<Coin key={coins[17]?.id} coin={coins[17]}></Coin>\n*/\n//0 1 7 9 17","import './App.css';\nimport Body from './Components/Body'\n\n\nfunction App() {\n  return (\n    <div className='body'>\n      <Body></Body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}